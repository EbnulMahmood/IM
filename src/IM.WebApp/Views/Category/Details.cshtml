@using Humanizer
@using IM.UseCases.Dtos.Enums
@model CategoryDto
@{
    ViewData["Title"] = "Details";
}

<div class="container p-3">
    <div class="row pt-4">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
                    <li class="breadcrumb-item"><a asp-controller="Category" asp-action="Index">Category</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Details</li>
                </ol>
            </nav>
        </div>
        <div class="col-12">
            <h2 class="text-primary">Category Info</h2>
        </div>
    </div>
    <div class="card mb-3">
        <div class="card-header">Category</div>
        <div class="card-body">
            <h4 class="card-title">Name: @Model.Name</h4>
            <p class="card-text">Description: @Model.Description</p>
            <p class="card-text">Status: @(Model.Status == StatusDto.Active ? "Active" : "Inactive")</p>
            <p class="card-text">Created At: @Model.CreatedAt.ToUniversalTime().Humanize()</p>
            @if (Model.ModifiedAt != null)
            {
                <p class="card-text">Created At: @Model.ModifiedAt?.ToUniversalTime().Humanize()</p>
            }
        </div>
    </div>
    <div class="form-group pt-1">
        <a asp-controller="Category" asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>